export const sampleTextbookContent = {
    title: "Introduction to Environmental Science: A 9th Grade Textbook",
    chapters: [
      {
        title: "Chapter 1: Understanding Earth's Systems",
        content:
          "Earth is a complex planet with interconnected systems that work together to support life. These systems include the atmosphere, hydrosphere, geosphere, and biosphere.\n\nThe atmosphere is the layer of gases surrounding Earth. It protects us from harmful radiation, regulates temperature, and provides the air we breathe. The atmosphere consists of several layers, including the troposphere, stratosphere, mesosphere, thermosphere, and exosphere.\n\n**Python Example: Atmospheric Composition**\n\n```python\n# Python code to visualize the composition of Earth's atmosphere\nimport matplotlib.pyplot as plt\n\n# Composition of dry air in the atmosphere (percentage by volume)\ngases = ['Nitrogen', 'Oxygen', 'Argon', 'Carbon Dioxide', 'Other']\npercentages = [78.08, 20.95, 0.93, 0.04, 0.00]\n\n# Create a pie chart\nplt.figure(figsize=(10, 6))\nplt.pie(percentages, labels=gases, autopct='%1.2f%%', startangle=90, colors=['skyblue', 'lightgreen', 'lightgray', 'coral', 'yellow'])\nplt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle\nplt.title('Composition of Earth\\'s Atmosphere')\n\n# Display the chart\nplt.show()\n```\n\nThe hydrosphere encompasses all water on Earth, including oceans, lakes, rivers, groundwater, and water vapor. Water is essential for life and plays a crucial role in regulating Earth's climate through the water cycle.\n\nThe geosphere refers to the solid parts of Earth, including the crust, mantle, and core. The geosphere provides the foundation for ecosystems and contains valuable resources that humans use.\n\nThe biosphere includes all living organisms on Earth and their interactions with the environment. It extends from the deepest ocean trenches to the highest mountains and represents the incredible diversity of life on our planet.\n\nThese systems do not exist in isolation; they constantly interact and influence each other. For example, plants in the biosphere absorb carbon dioxide from the atmosphere and release oxygen, affecting atmospheric composition. Understanding these interactions is essential for addressing environmental challenges like climate change and pollution.",
      },
      {
        title: "Chapter 2: Climate Change: Causes and Impacts",
        content:
          "Climate change refers to long-term shifts in temperature and weather patterns. While natural factors can cause climate change, human activities have been the primary driver of observed changes since the mid-20th century.\n\nThe main cause of human-induced climate change is the emission of greenhouse gases, particularly carbon dioxide (CO2), methane (CH4), and nitrous oxide (N2O). These gases trap heat in Earth's atmosphere, leading to global warming. The burning of fossil fuels for electricity, transportation, and industry is the largest source of greenhouse gas emissions.\n\n**Python Example: Analyzing Global Temperature Data**\n\n```python\n# Python code to analyze and visualize global temperature trends\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Sample data: Years and global temperature anomalies (°C) from 1880 to 2020\n# Data is simplified for educational purposes\nyears = np.arange(1880, 2021, 10)\ntemp_anomalies = [-0.2, -0.15, -0.17, -0.05, 0.05, 0.13, 0.17, 0.23, 0.32, 0.55, 0.7, 0.9, 1.2, 1.5]\n\n# Create the line plot\nplt.figure(figsize=(12, 6))\nplt.plot(years, temp_anomalies, marker='o', linestyle='-', color='red', linewidth=2)\n\n# Add a horizontal line at y=0 for reference\nplt.axhline(y=0, color='gray', linestyle='--', alpha=0.7)\n\n# Add labels and title\nplt.xlabel('Year')\nplt.ylabel('Temperature Anomaly (°C)')\nplt.title('Global Temperature Anomalies (1880-2020)')\nplt.grid(True, alpha=0.3)\n\n# Calculate and display the trend line\nz = np.polyfit(years, temp_anomalies, 1)\np = np.poly1d(z)\nplt.plot(years, p(years), 'b--', alpha=0.7, label=f'Trend: {z[0]:.4f}°C per year')\nplt.legend()\n\n# Display the plot\nplt.tight_layout()\nplt.show()\n\n# Calculate the total temperature increase\nprint(f\"Total temperature increase from 1880 to 2020: {temp_anomalies[-1] - temp_anomalies[0]:.2f}°C\")\n```\n\nDeforestation also contributes to climate change by reducing the number of trees available to absorb CO2 and by releasing stored carbon when trees are cut down and burned or left to decompose.\n\nThe impacts of climate change are far-reaching and affect ecosystems and communities worldwide. Rising global temperatures have led to melting ice caps and glaciers, resulting in sea level rise that threatens coastal communities. Climate change also intensifies extreme weather events, including hurricanes, droughts, floods, and heatwaves.\n\nEcosystems are being disrupted as species struggle to adapt to changing conditions. Some species are shifting their ranges toward the poles or to higher elevations, while others face extinction if they cannot adapt quickly enough.\n\nHuman communities face numerous challenges from climate change, including threats to food and water security, increased health risks, and economic impacts. Vulnerable populations, particularly in developing countries, often bear the brunt of these impacts despite contributing least to the problem.",
      },
      {
        title: "Chapter 3: Pollution and Human Health",
        content:
          'Pollution occurs when harmful substances are introduced into the environment, causing adverse effects on ecosystems and human health. There are several types of pollution, including air, water, soil, noise, and light pollution.\n\nAir pollution is caused by the release of particulate matter, gases, and other contaminants into the atmosphere. Major sources include vehicle emissions, industrial processes, and the burning of fossil fuels. Air pollution can cause respiratory diseases, cardiovascular problems, and premature death. The World Health Organization estimates that air pollution contributes to millions of deaths annually.\n\n**Python Example: Air Quality Index Calculator**\n\n```python\n# Python function to calculate Air Quality Index (AQI) based on PM2.5 concentration\ndef calculate_aqi_from_pm25(pm25_concentration):\n    """\n    Calculate the Air Quality Index (AQI) based on PM2.5 concentration in μg/m³\n    \n    AQI Categories:\n    0-50: Good\n    51-100: Moderate\n    101-150: Unhealthy for Sensitive Groups\n    151-200: Unhealthy\n    201-300: Very Unhealthy\n    301+: Hazardous\n    """\n    # AQI breakpoints for PM2.5\n    breakpoints = [\n        (0, 12.0, 0, 50),      # Good\n        (12.1, 35.4, 51, 100),  # Moderate\n        (35.5, 55.4, 101, 150), # Unhealthy for Sensitive Groups\n        (55.5, 150.4, 151, 200), # Unhealthy\n        (150.5, 250.4, 201, 300), # Very Unhealthy\n        (250.5, 500.4, 301, 500)  # Hazardous\n    ]\n    \n    # Find the appropriate breakpoint\n    for low_conc, high_conc, low_aqi, high_aqi in breakpoints:\n        if low_conc <= pm25_concentration <= high_conc:\n            # Linear interpolation formula\n            aqi = ((high_aqi - low_aqi) / (high_conc - low_conc)) * (pm25_concentration - low_conc) + low_aqi\n            return round(aqi)\n    \n    # If concentration is above the highest breakpoint\n    if pm25_concentration > 500.4:\n        return 500\n    # If concentration is below the lowest breakpoint\n    return 0\n\n# Function to get AQI category and color\ndef get_aqi_category(aqi):\n    if aqi <= 50:\n        return "Good", "green"\n    elif aqi <= 100:\n        return "Moderate", "yellow"\n    elif aqi <= 150:\n        return "Unhealthy for Sensitive Groups", "orange"\n    elif aqi <= 200:\n        return "Unhealthy", "red"\n    elif aqi <= 300:\n        return "Very Unhealthy", "purple"\n    else:\n        return "Hazardous", "maroon"\n\n# Test the function with different PM2.5 concentrations\ntest_concentrations = [10, 30, 45, 90, 200, 300]\n\nfor conc in test_concentrations:\n    aqi = calculate_aqi_from_pm25(conc)\n    category, color = get_aqi_category(aqi)\n    print(f"PM2.5: {conc} μg/m³ → AQI: {aqi} ({category})")\n```\n\nWater pollution occurs when contaminants such as chemicals, pathogens, and plastic waste enter water bodies. Sources include industrial discharge, agricultural runoff, and improper waste disposal. Water pollution threatens aquatic ecosystems and can make water unsafe for human consumption, leading to waterborne diseases.\n\nSoil pollution involves the contamination of soil with chemicals, heavy metals, or other hazardous substances. This can reduce soil fertility, harm soil organisms, and contaminate crops grown in polluted soil. Humans can be exposed to soil contaminants through direct contact, inhalation of dust, or consumption of contaminated food.\n\nPlastic pollution has become a global crisis, with millions of tons of plastic entering the oceans each year. Plastic waste harms marine life through entanglement and ingestion, and microplastics have been found in food, drinking water, and even human blood.\n\nReducing pollution requires a combination of regulatory measures, technological innovation, and individual actions. Governments can implement and enforce environmental regulations, businesses can adopt cleaner production methods, and individuals can make choices that minimize their environmental impact.',
      },
      {
        title: "Chapter 4: Conservation and Biodiversity",
        content:
          'Biodiversity refers to the variety of life on Earth, including the diversity of species, genetic diversity within species, and the diversity of ecosystems. Earth is home to millions of species, many of which have not yet been discovered or described by scientists.\n\n**Python Example: Biodiversity Index Calculator**\n\n```python\n# Python code to calculate biodiversity indices for an ecosystem\nimport math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef shannon_diversity_index(species_counts):\n    """\n    Calculate the Shannon diversity index (H\').\n    H\' = -sum(p_i * ln(p_i)) where p_i is the proportion of individuals of species i.\n    \n    Higher values indicate higher diversity.\n    """\n    total = sum(species_counts)\n    proportions = [count/total for count in species_counts if count > 0]\n    return -sum(p * math.log(p) for p in proportions)\n\ndef simpson_diversity_index(species_counts):\n    """\n    Calculate Simpson\'s diversity index (D).\n    D = 1 - sum(p_i^2) where p_i is the proportion of individuals of species i.\n    \n    Values range from 0 to 1, with higher values indicating higher diversity.\n    """\n    total = sum(species_counts)\n    proportions = [count/total for count in species_counts]\n    return 1 - sum(p**2 for p in proportions)\n\ndef species_richness(species_counts):\n    """\n    Calculate species richness (S).\n    S is simply the number of different species present.\n    """\n    return sum(1 for count in species_counts if count > 0)\n\ndef species_evenness(species_counts):\n    """\n    Calculate species evenness (E).\n    E = H\' / ln(S) where H\' is Shannon diversity and S is species richness.\n    \n    Values range from 0 to 1, with 1 representing perfect evenness.\n    """\n    s = species_richness(species_counts)\n    if s <= 1:\n        return 0\n    h = shannon_diversity_index(species_counts)\n    return h / math.log(s)\n\n# Example: Compare biodiversity in three different ecosystems\necosystems = {\n    "Rainforest": [45, 25, 30, 20, 15, 10, 8, 7, 5, 3],\n    "Grassland": [80, 70, 5, 3, 2, 0, 0, 0, 0, 0],\n    "Coral Reef": [20, 18, 16, 14, 12, 10, 8, 6, 4, 2]\n}\n\n# Calculate biodiversity indices for each ecosystem\nresults = {}\nfor name, counts in ecosystems.items():\n    results[name] = {\n        "Shannon Index": shannon_diversity_index(counts),\n        "Simpson Index": simpson_diversity_index(counts),\n        "Species Richness": species_richness(counts),\n        "Species Evenness": species_evenness(counts)\n    }\n\n# Print results\nfor ecosystem, indices in results.items():\n    print(f"\\n{ecosystem} Ecosystem:")\n    for index_name, value in indices.items():\n        print(f"  {index_name}: {value:.4f}")\n\n# Visualize the results\nindices = ["Shannon Index", "Simpson Index", "Species Richness", "Species Evenness"]\neco_names = list(results.keys())\n\n# Normalize species richness for visualization\nfor eco in results:\n    results[eco]["Species Richness"] = results[eco]["Species Richness"] / 10  # Assuming max 10 species\n\n# Create grouped bar chart\nx = np.arange(len(indices))\nwidth = 0.25\n\nfig, ax = plt.subplots(figsize=(12, 6))\n\nfor i, eco in enumerate(eco_names):\n    values = [results[eco][index] for index in indices]\n    ax.bar(x + i*width, values, width, label=eco)\n\nax.set_ylabel(\'Index Value\')\nax.set_title(\'Biodiversity Indices Comparison\')\nax.set_xticks(x + width)\nax.set_xticklabels(indices)\nax.legend()\n\nplt.tight_layout()\nplt.show()\n```\n\nBiodiversity is crucial for ecosystem functioning and provides numerous benefits to humans, including food, medicine, clean air and water, and cultural values. Ecosystems with high biodiversity tend to be more resilient to disturbances and better able to provide ecosystem services.\n\nUnfortunately, biodiversity is declining at an alarming rate due to human activities. The main threats to biodiversity include habitat loss and fragmentation, overexploitation of species, pollution, invasive species, and climate change. Scientists estimate that the current extinction rate is hundreds to thousands of times higher than the natural background rate.\n\nConservation biology is the scientific study of the conservation and protection of biodiversity. Conservation strategies include the establishment of protected areas, habitat restoration, captive breeding programs, and sustainable resource management.\n\nProtected areas, such as national parks, wildlife refuges, and marine reserves, play a vital role in conservation by safeguarding habitats and the species that depend on them. However, protected areas alone are not sufficient to conserve biodiversity; conservation efforts must also address the underlying causes of biodiversity loss.\n\nEveryone can contribute to conservation efforts through actions such as supporting conservation organizations, making sustainable consumer choices, reducing waste and pollution, and advocating for policies that protect biodiversity.',
      },
      {
        title: "Chapter 5: Sustainable Practices and Solutions",
        content:
          'Sustainability involves meeting the needs of the present without compromising the ability of future generations to meet their own needs. Sustainable practices aim to balance environmental protection, social well-being, and economic development.\n\n**Python Example: Carbon Footprint Calculator**\n\n```python\n# Python code for a simple carbon footprint calculator\n\nclass CarbonFootprintCalculator:\n    def __init__(self):\n        # Emission factors (kg CO2e per unit)\n        self.electricity_factor = 0.92  # per kWh\n        self.natural_gas_factor = 2.03  # per m3\n        self.water_factor = 0.344  # per m3\n        self.car_factor = 0.192  # per km\n        self.flight_short_factor = 0.255  # per km\n        self.flight_long_factor = 0.150  # per km\n        self.meat_factor = 6.0  # per kg\n        self.dairy_factor = 1.5  # per kg\n        self.fruits_vegetables_factor = 0.5  # per kg\n    \n    def calculate_home_emissions(self, electricity_kwh, natural_gas_m3, water_m3):\n        """Calculate emissions from home energy and water use"""\n        electricity_emissions = electricity_kwh * self.electricity_factor\n        natural_gas_emissions = natural_gas_m3 * self.natural_gas_factor\n        water_emissions = water_m3 * self.water_factor\n        \n        total = electricity_emissions + natural_gas_emissions + water_emissions\n        return {\n            "electricity": electricity_emissions,\n            "natural_gas": natural_gas_emissions,\n            "water": water_emissions,\n            "total": total\n        }\n    \n    def calculate_transportation_emissions(self, car_km, flight_short_km, flight_long_km):\n        """Calculate emissions from transportation"""\n        car_emissions = car_km * self.car_factor\n        flight_short_emissions = flight_short_km * self.flight_short_factor\n        flight_long_emissions = flight_long_km * self.flight_long_factor\n        \n        total = car_emissions + flight_short_emissions + flight_long_emissions\n        return {\n            "car": car_emissions,\n            "flight_short": flight_short_emissions,\n            "flight_long": flight_long_emissions,\n            "total": total\n        }\n    \n    def calculate_food_emissions(self, meat_kg, dairy_kg, fruits_vegetables_kg):\n        """Calculate emissions from food consumption"""\n        meat_emissions = meat_kg * self.meat_factor\n        dairy_emissions = dairy_kg * self.dairy_factor\n        fruits_vegetables_emissions = fruits_vegetables_kg * self.fruits_vegetables_factor\n        \n        total = meat_emissions + dairy_emissions + fruits_vegetables_emissions\n        return {\n            "meat": meat_emissions,\n            "dairy": dairy_emissions,\n            "fruits_vegetables": fruits_vegetables_emissions,\n            "total": total\n        }\n    \n    def calculate_total_footprint(self, home, transportation, food):\n        """Calculate total carbon footprint"""\n        return home["total"] + transportation["total"] + food["total"]\n\n# Example usage\ncalculator = CarbonFootprintCalculator()\n\n# Monthly consumption\nelectricity_kwh = 250  # kWh of electricity\nnatural_gas_m3 = 30    # m3 of natural gas\nwater_m3 = 15          # m3 of water\n\ncar_km = 500           # km driven by car\nflight_short_km = 0    # km on short flights (<3 hours)\nflight_long_km = 0     # km on long flights (>3 hours)\n\nmeat_kg = 4            # kg of meat consumed\ndairy_kg = 5           # kg of dairy consumed\nfruits_vegetables_kg = 20  # kg of fruits and vegetables consumed\n\n# Calculate emissions\nhome_emissions = calculator.calculate_home_emissions(electricity_kwh, natural_gas_m3, water_m3)\ntransportation_emissions = calculator.calculate_transportation_emissions(car_km, flight_short_km, flight_long_km)\nfood_emissions = calculator.calculate_food_emissions(meat_kg, dairy_kg, fruits_vegetables_kg)\n\ntotal_footprint = calculator.calculate_total_footprint(home_emissions, transportation_emissions, food_emissions)\n\n# Print results\nprint("Monthly Carbon Footprint Calculation")\nprint("====================================")\nprint(f"Home Emissions: {home_emissions[\'total\']:.2f} kg CO2e")\nprint(f"  - Electricity: {home_emissions[\'electricity\']:.2f} kg CO2e")\nprint(f"  - Natural Gas: {home_emissions[\'natural_gas\']:.2f} kg CO2e")\nprint(f"  - Water: {home_emissions[\'water\']:.2f} kg CO2e")\nprint()\nprint(f"Transportation Emissions: {transportation_emissions[\'total\']:.2f} kg CO2e")\nprint(f"  - Car: {transportation_emissions[\'car\']:.2f} kg CO2e")\nprint(f"  - Short Flights: {transportation_emissions[\'flight_short\']:.2f} kg CO2e")\nprint(f"  - Long Flights: {transportation_emissions[\'flight_long\']:.2f} kg CO2e")\nprint()\nprint(f"Food Emissions: {food_emissions[\'total\']:.2f} kg CO2e")\nprint(f"  - Meat: {food_emissions[\'meat\']:.2f} kg CO2e")\nprint(f"  - Dairy: {food_emissions[\'dairy\']:.2f} kg CO2e")\nprint(f"  - Fruits & Vegetables: {food_emissions[\'fruits_vegetables\']:.2f} kg CO2e")\nprint()\nprint(f"Total Monthly Carbon Footprint: {total_footprint:.2f} kg CO2e")\nprint(f"Annual Carbon Footprint: {total_footprint * 12:.2f} kg CO2e")\n\n# Suggestions for reduction\nprint("\\nSuggestions to Reduce Your Carbon Footprint:")\nif home_emissions[\'electricity\'] > 200:\n    print("- Switch to energy-efficient appliances and LED lighting")\nif transportation_emissions[\'car\'] > 100:\n    print("- Consider carpooling, public transportation, or cycling for shorter trips")\nif food_emissions[\'meat\'] > 20:\n    print("- Try incorporating more plant-based meals into your diet")\n```\n\nRenewable energy sources, such as solar, wind, hydroelectric, and geothermal power, offer alternatives to fossil fuels. Unlike fossil fuels, renewable energy sources produce little to no greenhouse gas emissions during operation and will not be depleted over time. The cost of renewable energy has decreased significantly in recent years, making it increasingly competitive with fossil fuels.\n\nSustainable agriculture practices, such as organic farming, agroforestry, and precision agriculture, aim to produce food while minimizing environmental impacts. These practices can reduce soil erosion, conserve water, decrease pollution from agricultural runoff, and support biodiversity.\n\nThe concept of a circular economy involves redesigning products and systems to minimize waste and maximize the reuse and recycling of materials. This approach contrasts with the traditional linear economy model of \'take-make-dispose\' and can significantly reduce resource consumption and waste generation.\n\nGreen building practices incorporate environmentally responsible and resource-efficient processes throughout a building\'s life cycle. Features of green buildings may include energy-efficient lighting and appliances, water-saving fixtures, renewable energy systems, and sustainable building materials.\n\nIndividual actions, such as reducing consumption, reusing items, recycling, conserving energy and water, and choosing sustainable products, can collectively make a significant difference. However, addressing environmental challenges also requires systemic changes in how societies produce and consume goods and services.\n\nEnvironmental justice recognizes that environmental benefits and burdens are often unequally distributed, with marginalized communities frequently bearing a disproportionate share of environmental harms. Achieving sustainability requires ensuring that all people have access to a clean and healthy environment and a voice in environmental decision-making.',
      },
    ],
  }
  
  